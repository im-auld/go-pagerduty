package pagerduty

const (
	apiEndpoint = "https://api.pagerduty.com"
	pagerdutyAcceptHeader = "application/vnd.pagerduty+json;version=2"

	// Resource Types
	AbilityResourceType           APIResourceType = "ability"
	AddonResourceType             APIResourceType = "addon"
	EscalationPolicyResourceType  APIResourceType = "escalation_policy"
	EventResourceType             APIResourceType = "event"
	ExtensionResourceType         APIResourceType = "extension"
	IncidentResourceType          APIResourceType = "incident"
	LogEntryResourceType          APIResourceType = "log_entry"
	MaintenanceWindowResourceType APIResourceType = "maintenance_window"
	NotificationResourceType      APIResourceType = "notification"
	OnCallResourceType            APIResourceType = "on_call"
	ResponsePlayResourceType      APIResourceType = "response_play"
	ScheduleResourceType          APIResourceType = "schedule"
	ServiceResourceType           APIResourceType = "service"
	TeamResourceType              APIResourceType = "team"
	UserResourceType              APIResourceType = "user"
	VendorResourceType            APIResourceType = "vendor"
	WebhookResourceType           APIResourceType = "webhook"

	// Abilities
	AbilitySSO                                Ability = "sso"
	AbilityAdvancedReports                    Ability = "advanced_reports"
	Abilityteams                              Ability = "teams"
	AbilityReadOnlyUsers                      Ability = "read_only_users"
	AbilityTeamResponders                     Ability = "team_responders"
	AbilityServiceSupportHours                Ability = "service_support_hours"
	Abilityurgencies                          Ability = "urgencies"
	AbilityManageSchedules                    Ability = "manage_schedules"
	AbilityManageApiKeys                      Ability = "manage_api_keys"
	AbilityCoordinatedResponding              Ability = "coordinated_responding"
	AbilityResponseAutomation                 Ability = "response_automation"
	AbilityUsingAlertsOnAnyService            Ability = "using_alerts_on_any_service"
	AbilityEventRules                         Ability = "event_rules"
	AbilityDynamicNotifications               Ability = "dynamic_notifications"
	AbilityBetaCustomActions                  Ability = "beta_custom_actions"
	AbilityCoordinatedRespondingPreview       Ability = "coordinated_responding_preview"
	AbilityPreviewIncidentAlertSplit          Ability = "preview_incident_alert_split"
	AbilityTimeBasedAlertGrouping             Ability = "time_based_alert_grouping"
	AbilityMobileSchedules                    Ability = "mobile_schedules"
	AbilityResponseplaysMobileIosV1           Ability = "responseplays_mobile_ios_v1"
	AbilityResponseplaysMobileAndroidV1       Ability = "responseplays_mobile_android_v1"
	AbilityLivenessIosV1                      Ability = "liveness_ios_v1"
	AbilityLivenessAndroidV1                  Ability = "liveness_android_v1"
	AbilityPreviewIncidentPriority            Ability = "preview_incident_priority"
	AbilityIncidentPriorityActivated          Ability = "incident_priority_activated"
	AbilityFeaturesInUsePreventingDowngradeTo Ability = "features_in_use_preventing_downgrade_to"
	AbilityFeatureToPlanMap                   Ability = "feature_to_plan_map"

	// Integration constants
	AwsCloudwatchInboundIntegration                = "aws_cloudwatch_inbound_integration"
	AwsCloudwatchInboundIntegrationReference       = "aws_cloudwatch_inbound_integration_reference"
	CloudkickInboundIntegration                    = "cloudkick_inbound_integration"
	CloudkickInboundIntegrationReference           = "cloudkick_inbound_integration_reference"
	EventTransformerApiInboundIntegration          = "event_transformer_api_inbound_integration"
	EventTransformerApiInboundIntegrationReference = "event_transformer_api_inbound_integration_reference"
	GenericEmailInboundIntegration                 = "generic_email_inbound_integration"
	GenericEmailInboundIntegrationReference        = "generic_email_inbound_integration_reference"
	GenericEventsApiInboundIntegration             = "generic_events_api_inbound_integration"
	GenericEventsApiInboundIntegrationReference    = "generic_events_api_inbound_integration_reference"
	KeynoteInboundIntegration                      = "keynote_inbound_integration"
	KeynoteInboundIntegrationReference             = "keynote_inbound_integration_reference"
	NagiosInboundIntegration                       = "nagios_inbound_integration"
	NagiosInboundIntegrationReference              = "nagios_inbound_integration_reference"
	PingdomInboundIntegration                      = "pingdom_inbound_integration"
	PingdomInboundIntegrationReference             = "pingdom_inbound_integration_reference"
	SqlMonitorInboundIntegration                   = "sql_monitor_inbound_integration"
	SqlMonitorInboundIntegrationReference          = "sql_monitor_inbound_integration_reference"

	// Timezones
	TZAmericaLos_Angeles = "America/Los_Angeles"
	TZEuropeCopenhagen   = "Europe/Copenhagen"
	TZEtcUTC             = "Etc/UTC"
	TZAsiaShanghai       = "Asia/Shanghai"
	TZEuropeHelsinki     = "Europe/Helsinki"
	TZEuropeAmsterdam    = "Europe/Amsterdam"

	// Service constants
	svcStatusActive             = "active"
	svcStatusWarning            = "warning"
	svcStatusCritical           = "critical"
	svcStatusMaintenance        = "maintenance"
	svcStatusDisabled           = "disabled"
	svcCreateIncidents          = "create_incidents"
	svcCreateAlertsAndIncidents = "create_alerts_and_incidents"
)
